obstacle_range: 3.0 # 用于障碍物探测，比如: 值为 3.0，意味着检测到距离小于 3 米的障碍物时，就会引入代价地图
raytrace_range: 3.5 # 用于清除障碍物，比如：值为 3.5，意味着清除代价地图中 3.5 米以外的障碍物

#机器人几何参，如果机器人是圆形，设置 robot_radius,如果是其他形状设置 footprint
# footprint: [[-0.105, -0.105], [-0.105, 0.105], [0.041, 0.105], [0.041, -0.105]]
footprint: [[-0.1, -0.08], [-0.1, 0.08], [0.1, 0.08], [0.1, -0.08]]
#robot_radius: 0.105

inflation_radius: 0.1 #膨胀半径，扩展在碰撞区域以外的代价区域，使得机器人规划路径避开障碍物
cost_scaling_factor: 10.0 #代价比例系数，越大则代价值越小

map_type: costmap #地图类型
observation_sources: scan #导航包所需要的传感器
#对传感器的坐标系和数据进行配置。这个也会用于代价地图添加和清除障碍物。
scan: {sensor_frame: laser_link, data_type: LaserScan, topic: scan, marking: true, clearing: true}
